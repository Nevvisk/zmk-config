/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define KEYS_LEFT_HAND 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_RIGHT_HAND 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
/ {
    behaviors {
        hml: home_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_MOD_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_RIGHT_HAND>;
            hold-trigger-on-release;
        };

        hmr: home_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_MOD_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_LEFT_HAND>;
            hold-trigger-on-release;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LALT &hml LALT A &hml LSHIFT S &hml LGUI D &hml LCTRL F &kp G   &kp H &hmr LCTRL J  &hmr LGUI K  &hmr LSHIFT L  &hmr LALT SEMI &kp SQT
   &kp LSHIFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp LCTRL
                  &kp LGUI &kp LSHIFT &kp RET  &kp SPACE &mo 2 &kp ESC
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &bt BT_CLR_ALL       &bt BT_SEL       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
    &kp TAB    &kp DELETE   &kp N1    &kp N2    &kp N3    &kp LS(DQT)  &kp MINUS    &kp LPAR    &kp RPAR    &kp MINUS    &kp EQUAL    &kp BSPC
    &kp LCTRL  &kp LS(FSLH) &kp N4    &kp N5    &kp N6    &kp LS(SEMI) &kp LEFT     &kp DOWN     &kp UP      &kp RIGHT    &kp APOS     &kp GRAVE
    &kp LSHFT  &kp LS(4)    &kp N7    &kp N8    &kp N9    &kp N0        &kp LS(LBKT) &kp LS(RBKT) &kp LBKT    &kp RBKT     &kp BSLH     &kp TILDE
                   &kp LGUI  &kp LSHFT  &kp SPACE  &kp ENTER  &mo 2  &mo 1
                        >;
                };
        };
};
