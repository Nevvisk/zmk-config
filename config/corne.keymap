/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

    behaviors {
        uc: unicode {
            compatible = "zmk,behavior-unicode";
            #binding-cells = <1>;
        };
    };

  
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp  A &kp  S &kp  D &kp F &kp G   &kp H &kp J  &kp K  &kp L  &kp  SEMI &kp SQT
   &kp LALT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp CAPSLOCK
                  &kp LGUI &kp LSHFT &kp RET  &kp SPACE &mo 2 &kp ESC
                        >;
                };
                lower_layer {
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &uc 0x00FC  &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp  K_NEXT  &kp  &trans  &uc 0x00F6  &uc 0x00E4  &trans &trans
   &kp LSHFT  &bt BT_CLR_ALL  &trans  &kp K_PREV    &kp K_NEXT  &trans  &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };
                raise_layer {
                        bindings = <
    &kp TAB    &kp N1  &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp DEL
    &kp LCTRL  &kp QMARK &kp BSLH &kp LS(N5) &kp LS(APOS) &kp LS(SEMI)  &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp BSLH &kp PSCRN
    &kp LSHFT  &kp MINUS &kp LBKT &kp LPAR &kp LBRC &kp LT  &kp GT &kp RBRC &kp RPAR &kp RBKT &kp EQUAL &kp GRAVE
                                    &kp LGUI  &mo 1  &kp SPACE  &kp ENTER  &mo 3 &kp LSHIFT
                        >;
                };
    };
};

